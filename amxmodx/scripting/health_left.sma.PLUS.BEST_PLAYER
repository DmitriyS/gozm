#include <amxmodx>
#include <hamsandwich>
#include <csx>
#include <biohazard>
#include <colored_print>

#define STATS_HITS              5
#define STATS_DAMAGE            6

new g_iMaxPlayers  

new bool:g_bIsConnected[25]

new g_MsgSync
new g_MsgSync2

#define IsConnected(%1) (1 <= %1 <= g_iMaxPlayers && g_bIsConnected[%1])

#define PLUGIN_VERSION "0.1"
#define PLUGIN_AUTHOR "meTaLiCroSS"

public plugin_init() 
{
	register_plugin("HP Displayer", PLUGIN_VERSION, PLUGIN_AUTHOR)
	RegisterHam(Ham_TakeDamage, "player", "fw_Player_TakeDamage_Post", 1)
	register_clcmd("say /me", "cmdMe", 0, "- display current round stats (chat)")
	register_clcmd("say_team /me", "cmdMe", 0, "- display current round stats (chat)")
	register_event("SendAudio", "eventEndRound", "a", "2=%!MRAD_terwin", "2=%!MRAD_ctwin", "2=%!MRAD_rounddraw")
	g_MsgSync = CreateHudSyncObj()
	g_MsgSync2 = CreateHudSyncObj()
	g_iMaxPlayers = get_maxplayers()
}

public client_putinserver(iId) g_bIsConnected[iId] = true
public client_disconnect(iId) g_bIsConnected[iId] = false

public fw_Player_TakeDamage_Post(iVictim, iInflictor, iAttacker, Float:flDamage, iDamageType)
{
	if(!IsConnected(iAttacker) || iVictim == iAttacker)
        return HAM_IGNORED
    
	if(is_user_zombie(iVictim) && !(is_user_zombie(iAttacker)))
	{
		static iVictimHealth
		iVictimHealth = get_user_health(iVictim)
        
		if(iVictimHealth < 0)
		iVictimHealth = 0
 
		set_hudmessage(0, 100, 200, 0.55, 0.49, 0, 0.1, 2.0, 0.1, 0.1, -1)
		ShowSyncHudMsg(iAttacker, g_MsgSync, "%d", floatround(flDamage))
		
		set_hudmessage(0, 150, 20, 0.49, 0.55, 0, 0.1, 2.0, 0.1, 0.1, -1)
		ShowSyncHudMsg(iAttacker, g_MsgSync2, "%d", iVictimHealth)
		
		set_hudmessage(200, 0, 0, 0.40, 0.49, 0, 0.1, 2.0, 0.1, 0.1, -1)
		ShowSyncHudMsg(iVictim, g_MsgSync, "%d", floatround(flDamage))
	}   
	return HAM_IGNORED
}

public cmdMe(id)
{
	new izStats[8]
	new izBody[8]

	izStats[STATS_HITS] = 0
	izStats[STATS_DAMAGE] = 0
	
	get_user_vstats(id, 0, izStats, izBody)
		
	colored_print(id, "^x04 ***^x01 Last result:^x04 %d^x01 hits and^x04 %d^x01 damage", izStats[STATS_HITS], izStats[STATS_DAMAGE])
	
	return PLUGIN_CONTINUE
}

add_most_disruptive()
{
	new id, iMaxDamageId, iMaxDamage, name[32]
	
	new izStats[8]
	new izBody[8]
	izStats[STATS_HITS] = 0
	izStats[STATS_DAMAGE] = 0

	iMaxDamageId = 0
	iMaxDamage = 0

	// Find player.
	for (id = 1; id < get_maxplayers(); id++)
	{
		get_user_vstats(id, 0, izStats, izBody)
		if (izStats[STATS_DAMAGE] >= iMaxDamage)
		{
			iMaxDamageId = id
			iMaxDamage = izStats[STATS_DAMAGE]
		}
	}
	
	get_user_name(id, name, 31)

	// Format statistics.
	if (iMaxDamageId)
	{
		id = iMaxDamageId
		colored_print(0, "^x04***^x01 Best Player: [^x03     %s^x01     ]   ->   [^x04     %d dmg^x01     ]", name, iMaxDamage)
	}
}

public eventEndRound()
{
	add_most_disruptive()
	
	return PLUGIN_CONTINUE
}